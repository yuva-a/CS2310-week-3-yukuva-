CHIP q2
{
    IN x[16],y[16],as;
    OUT s[16],overflow;

    PARTS:
// to set up for add or subtract
    And(a=as,b=as,out=c0);
    Xor(a=y[0],b=as,out=y0);
    Xor(a=y[1],b=as,out=y1);
    Xor(a=y[2],b=as,out=y2);
    Xor(a=y[3],b=as,out=y3);
    Xor(a=y[4],b=as,out=y4);
    Xor(a=y[5],b=as,out=y5);
    Xor(a=y[6],b=as,out=y6);
    Xor(a=y[7],b=as,out=y7);
    Xor(a=y[8],b=as,out=y8);
    Xor(a=y[9],b=as,out=y9);
    Xor(a=y[10],b=as,out=y10);
    Xor(a=y[11],b=as,out=y11);
    Xor(a=y[12],b=as,out=y12);
    Xor(a=y[13],b=as,out=y13);
    Xor(a=y[14],b=as,out=y14);
    Xor(a=y[15],b=as,out=y15);
//making pi , qi
    Xor(a=x[0],b=y0,out=p0);
    Xor(a=x[1],b=y1,out=p1);
    Xor(a=x[2],b=y2,out=p2);
    Xor(a=x[3],b=y3,out=p3);
    Xor(a=x[4],b=y4,out=p4);
    Xor(a=x[5],b=y5,out=p5);
    Xor(a=x[6],b=y6,out=p6);
    Xor(a=x[7],b=y7,out=p7);
    Xor(a=x[8],b=y8,out=p8);
    Xor(a=x[9],b=y9,out=p9);
    Xor(a=x[10],b=y10,out=p10);
    Xor(a=x[11],b=y11,out=p11);
    Xor(a=x[12],b=y12,out=p12);
    Xor(a=x[13],b=y13,out=p13);
    Xor(a=x[14],b=y14,out=p14);
    Xor(a=x[15],b=y15,out=p15);
    
    And(a=x[0],b=y0,out=q0);
    And(a=x[1],b=y1,out=q1);
    And(a=x[2],b=y2,out=q2);
    And(a=x[3],b=y3,out=q3);
    And(a=x[4],b=y4,out=q4);
    And(a=x[5],b=y5,out=q5);
    And(a=x[6],b=y6,out=q6);
    And(a=x[7],b=y7,out=q7);
    And(a=x[8],b=y8,out=q8);
    And(a=x[9],b=y9,out=q9);
    And(a=x[10],b=y10,out=q10);
    And(a=x[11],b=y11,out=q11);
    And(a=x[12],b=y12,out=q12);
    And(a=x[13],b=y13,out=q13);
    And(a=x[14],b=y14,out=q14);
    And(a=x[15],b=y15,out=q15);
// finding all ci
game(c0=c0,p0=p0,p1=p1,p2=p2,p3=p3,q0=q0,q1=q1,q2=q2,q3=q3,c1=c1,c2=c2,c3=c3,c4=c4);
game(c0=c4,p0=p4,p1=p5,p2=p6,p3=p7,q0=q4,q1=q5,q2=q6,q3=q7,c1=c5,c2=c6,c3=c7,c4=c8);
game(c0=c8,p0=p8,p1=p9,p2=p10,p3=p11,q0=q8,q1=q9,q2=q10,q3=q11,c1=c9,c2=c10,c3=c11,c4=c12);
game(c0=c12,p0=p12,p1=p13,p2=p14,p3=p15,q0=q12,q1=q13,q2=q14,q3=q15,c1=c13,c2=c14,c3=c15,c4=c16);

// finding s[i]
fun(x=x[0],y=y0,z=c0,out=s[0]);
fun(x=x[1],y=y1,z=c1,out=s[1]);
fun(x=x[2],y=y2,z=c2,out=s[2]);
fun(x=x[3],y=y3,z=c3,out=s[3]);
fun(x=x[4],y=y4,z=c4,out=s[4]);
fun(x=x[5],y=y5,z=c5,out=s[5]);
fun(x=x[6],y=y6,z=c6,out=s[6]);
fun(x=x[7],y=y7,z=c7,out=s[7]);
fun(x=x[8],y=y8,z=c8,out=s[8]);
fun(x=x[9],y=y9,z=c9,out=s[9]);
fun(x=x[10],y=y10,z=c10,out=s[10]);
fun(x=x[11],y=y11,z=c11,out=s[11]);
fun(x=x[12],y=y12,z=c12,out=s[12]);
fun(x=x[13],y=y13,z=c13,out=s[13]);
fun(x=x[14],y=y14,z=c14,out=s[14]);
fun(x=x[15],y=y15,z=c15,out=s[15]);

//over flow  
Xor(a=c15,b=c16,out=overflow);       

}